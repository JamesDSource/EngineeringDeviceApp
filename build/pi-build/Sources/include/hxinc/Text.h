// Generated by Haxe 4.0.0-preview.5+1aaf080
#ifndef INCLUDED_Text
#define INCLUDED_Text

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(OriginPoint)
HX_DECLARE_CLASS0(Text)
HX_DECLARE_CLASS2(kha,graphics2,Graphics)
HX_DECLARE_CLASS2(kha,math,Vector2)



class HXCPP_CLASS_ATTRIBUTES Text_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Text_obj OBJ_;
		Text_obj();

	public:
		enum { _hx_ClassId = 0x37d2f8cd };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Text")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Text"); }

		hx::ObjectPtr< Text_obj > __new() {
			hx::ObjectPtr< Text_obj > __this = new Text_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Text_obj > __alloc(hx::Ctx *_hx_ctx) {
			Text_obj *__this = (Text_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Text_obj), false, "Text"));
			*(void **)__this = Text_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Text_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Text",cd,f8,d2,37); }

		static  ::kha::math::Vector2 textSize(::String text,Float hSeperation,Float vSeperation,::Array< ::Dynamic> preGenTokens);
		static ::Dynamic textSize_dyn();

		static void drawText( ::kha::graphics2::Graphics graphics,::String text, ::kha::math::Vector2 position,Float hSeperation,Float vSeperation, ::OriginPoint origin);
		static ::Dynamic drawText_dyn();

		static ::Array< ::Dynamic> getTokens(::String text);
		static ::Dynamic getTokens_dyn();

};


#endif /* INCLUDED_Text */ 
