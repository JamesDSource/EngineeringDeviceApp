// Generated by Haxe 4.0.0-preview.5+1aaf080
#ifndef INCLUDED_Project
#define INCLUDED_Project

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Project)
HX_DECLARE_CLASS1(components,Component)
HX_DECLARE_CLASS1(components,DivisionRect)
HX_DECLARE_CLASS1(kha,Canvas)
HX_DECLARE_CLASS1(kha,Framebuffer)
HX_DECLARE_CLASS1(kha,Kravur)
HX_DECLARE_CLASS1(kha,Resource)



class HXCPP_CLASS_ATTRIBUTES Project_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Project_obj OBJ_;
		Project_obj();

	public:
		enum { _hx_ClassId = 0x1af0ced5 };

		void __construct(Float windowWidth,Float windowHeight);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Project")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Project"); }
		static hx::ObjectPtr< Project_obj > __new(Float windowWidth,Float windowHeight);
		static hx::ObjectPtr< Project_obj > __alloc(hx::Ctx *_hx_ctx,Float windowWidth,Float windowHeight);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Project_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Project",b9,3a,3c,c3); }

		Float windowWidth;
		Float windowHeight;
		 ::components::DivisionRect masterDivision;
		 ::kha::Kravur font;
		void init();
		::Dynamic init_dyn();

		void update();
		::Dynamic update_dyn();

		void render(::Array< ::Dynamic> frames);
		::Dynamic render_dyn();

};


#endif /* INCLUDED_Project */ 
