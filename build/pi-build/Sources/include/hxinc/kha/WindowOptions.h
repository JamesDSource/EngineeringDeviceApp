// Generated by Haxe 4.0.0-preview.5+1aaf080
#ifndef INCLUDED_kha_WindowOptions
#define INCLUDED_kha_WindowOptions

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,Display)
HX_DECLARE_CLASS1(kha,WindowOptions)

namespace kha{


class HXCPP_CLASS_ATTRIBUTES WindowOptions_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef WindowOptions_obj OBJ_;
		WindowOptions_obj();

	public:
		enum { _hx_ClassId = 0x1b5f46ca };

		void __construct(::String title, ::Dynamic __o_x, ::Dynamic __o_y, ::Dynamic __o_width, ::Dynamic __o_height, ::kha::Display display, ::Dynamic __o_visible, ::Dynamic windowFeatures, ::Dynamic __o_mode);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.WindowOptions")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"kha.WindowOptions"); }
		static hx::ObjectPtr< WindowOptions_obj > __new(::String title, ::Dynamic __o_x, ::Dynamic __o_y, ::Dynamic __o_width, ::Dynamic __o_height, ::kha::Display display, ::Dynamic __o_visible, ::Dynamic windowFeatures, ::Dynamic __o_mode);
		static hx::ObjectPtr< WindowOptions_obj > __alloc(hx::Ctx *_hx_ctx,::String title, ::Dynamic __o_x, ::Dynamic __o_y, ::Dynamic __o_width, ::Dynamic __o_height, ::kha::Display display, ::Dynamic __o_visible, ::Dynamic windowFeatures, ::Dynamic __o_mode);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~WindowOptions_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("WindowOptions",2e,75,06,e3); }

		::String title;
		int x;
		int y;
		int width;
		int height;
		 ::kha::Display display;
		bool visible;
		int windowFeatures;
		int mode;
};

} // end namespace kha

#endif /* INCLUDED_kha_WindowOptions */ 
