// Generated by Haxe 4.0.0-preview.5+1aaf080
#include <hxcpp.h>

#ifndef INCLUDED_kha_graphics4_BlendingFactor
#include <hxinc/kha/graphics4/BlendingFactor.h>
#endif
namespace kha{
namespace graphics4{

::kha::graphics4::BlendingFactor BlendingFactor_obj::BlendOne;

::kha::graphics4::BlendingFactor BlendingFactor_obj::BlendZero;

::kha::graphics4::BlendingFactor BlendingFactor_obj::DestinationAlpha;

::kha::graphics4::BlendingFactor BlendingFactor_obj::DestinationColor;

::kha::graphics4::BlendingFactor BlendingFactor_obj::InverseDestinationAlpha;

::kha::graphics4::BlendingFactor BlendingFactor_obj::InverseDestinationColor;

::kha::graphics4::BlendingFactor BlendingFactor_obj::InverseSourceAlpha;

::kha::graphics4::BlendingFactor BlendingFactor_obj::InverseSourceColor;

::kha::graphics4::BlendingFactor BlendingFactor_obj::SourceAlpha;

::kha::graphics4::BlendingFactor BlendingFactor_obj::SourceColor;

::kha::graphics4::BlendingFactor BlendingFactor_obj::Undefined;

bool BlendingFactor_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BlendOne",b5,6e,84,44)) { outValue = BlendingFactor_obj::BlendOne; return true; }
	if (inName==HX_("BlendZero",f9,ff,9a,b6)) { outValue = BlendingFactor_obj::BlendZero; return true; }
	if (inName==HX_("DestinationAlpha",10,66,5c,b5)) { outValue = BlendingFactor_obj::DestinationAlpha; return true; }
	if (inName==HX_("DestinationColor",15,30,22,de)) { outValue = BlendingFactor_obj::DestinationColor; return true; }
	if (inName==HX_("InverseDestinationAlpha",a0,f9,1a,15)) { outValue = BlendingFactor_obj::InverseDestinationAlpha; return true; }
	if (inName==HX_("InverseDestinationColor",a5,c3,e0,3d)) { outValue = BlendingFactor_obj::InverseDestinationColor; return true; }
	if (inName==HX_("InverseSourceAlpha",d3,1a,b9,46)) { outValue = BlendingFactor_obj::InverseSourceAlpha; return true; }
	if (inName==HX_("InverseSourceColor",d8,e4,7e,6f)) { outValue = BlendingFactor_obj::InverseSourceColor; return true; }
	if (inName==HX_("SourceAlpha",63,04,cf,34)) { outValue = BlendingFactor_obj::SourceAlpha; return true; }
	if (inName==HX_("SourceColor",68,ce,94,5d)) { outValue = BlendingFactor_obj::SourceColor; return true; }
	if (inName==HX_("Undefined",70,1e,dd,3e)) { outValue = BlendingFactor_obj::Undefined; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(BlendingFactor_obj)

int BlendingFactor_obj::__FindIndex(::String inName)
{
	if (inName==HX_("BlendOne",b5,6e,84,44)) return 1;
	if (inName==HX_("BlendZero",f9,ff,9a,b6)) return 2;
	if (inName==HX_("DestinationAlpha",10,66,5c,b5)) return 4;
	if (inName==HX_("DestinationColor",15,30,22,de)) return 8;
	if (inName==HX_("InverseDestinationAlpha",a0,f9,1a,15)) return 6;
	if (inName==HX_("InverseDestinationColor",a5,c3,e0,3d)) return 10;
	if (inName==HX_("InverseSourceAlpha",d3,1a,b9,46)) return 5;
	if (inName==HX_("InverseSourceColor",d8,e4,7e,6f)) return 9;
	if (inName==HX_("SourceAlpha",63,04,cf,34)) return 3;
	if (inName==HX_("SourceColor",68,ce,94,5d)) return 7;
	if (inName==HX_("Undefined",70,1e,dd,3e)) return 0;
	return super::__FindIndex(inName);
}

int BlendingFactor_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("BlendOne",b5,6e,84,44)) return 0;
	if (inName==HX_("BlendZero",f9,ff,9a,b6)) return 0;
	if (inName==HX_("DestinationAlpha",10,66,5c,b5)) return 0;
	if (inName==HX_("DestinationColor",15,30,22,de)) return 0;
	if (inName==HX_("InverseDestinationAlpha",a0,f9,1a,15)) return 0;
	if (inName==HX_("InverseDestinationColor",a5,c3,e0,3d)) return 0;
	if (inName==HX_("InverseSourceAlpha",d3,1a,b9,46)) return 0;
	if (inName==HX_("InverseSourceColor",d8,e4,7e,6f)) return 0;
	if (inName==HX_("SourceAlpha",63,04,cf,34)) return 0;
	if (inName==HX_("SourceColor",68,ce,94,5d)) return 0;
	if (inName==HX_("Undefined",70,1e,dd,3e)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val BlendingFactor_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BlendOne",b5,6e,84,44)) return BlendOne;
	if (inName==HX_("BlendZero",f9,ff,9a,b6)) return BlendZero;
	if (inName==HX_("DestinationAlpha",10,66,5c,b5)) return DestinationAlpha;
	if (inName==HX_("DestinationColor",15,30,22,de)) return DestinationColor;
	if (inName==HX_("InverseDestinationAlpha",a0,f9,1a,15)) return InverseDestinationAlpha;
	if (inName==HX_("InverseDestinationColor",a5,c3,e0,3d)) return InverseDestinationColor;
	if (inName==HX_("InverseSourceAlpha",d3,1a,b9,46)) return InverseSourceAlpha;
	if (inName==HX_("InverseSourceColor",d8,e4,7e,6f)) return InverseSourceColor;
	if (inName==HX_("SourceAlpha",63,04,cf,34)) return SourceAlpha;
	if (inName==HX_("SourceColor",68,ce,94,5d)) return SourceColor;
	if (inName==HX_("Undefined",70,1e,dd,3e)) return Undefined;
	return super::__Field(inName,inCallProp);
}

static ::String BlendingFactor_obj_sStaticFields[] = {
	HX_("Undefined",70,1e,dd,3e),
	HX_("BlendOne",b5,6e,84,44),
	HX_("BlendZero",f9,ff,9a,b6),
	HX_("SourceAlpha",63,04,cf,34),
	HX_("DestinationAlpha",10,66,5c,b5),
	HX_("InverseSourceAlpha",d3,1a,b9,46),
	HX_("InverseDestinationAlpha",a0,f9,1a,15),
	HX_("SourceColor",68,ce,94,5d),
	HX_("DestinationColor",15,30,22,de),
	HX_("InverseSourceColor",d8,e4,7e,6f),
	HX_("InverseDestinationColor",a5,c3,e0,3d),
	::String(null())
};

hx::Class BlendingFactor_obj::__mClass;

Dynamic __Create_BlendingFactor_obj() { return new BlendingFactor_obj; }

void BlendingFactor_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_("kha.graphics4.BlendingFactor",4f,f8,07,8f), hx::TCanCast< BlendingFactor_obj >,BlendingFactor_obj_sStaticFields,0,
	&__Create_BlendingFactor_obj, &__Create,
	&super::__SGetClass(), &CreateBlendingFactor_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &BlendingFactor_obj::__GetStatic;
}

void BlendingFactor_obj::__boot()
{
BlendOne = hx::CreateConstEnum< BlendingFactor_obj >(HX_("BlendOne",b5,6e,84,44),1);
BlendZero = hx::CreateConstEnum< BlendingFactor_obj >(HX_("BlendZero",f9,ff,9a,b6),2);
DestinationAlpha = hx::CreateConstEnum< BlendingFactor_obj >(HX_("DestinationAlpha",10,66,5c,b5),4);
DestinationColor = hx::CreateConstEnum< BlendingFactor_obj >(HX_("DestinationColor",15,30,22,de),8);
InverseDestinationAlpha = hx::CreateConstEnum< BlendingFactor_obj >(HX_("InverseDestinationAlpha",a0,f9,1a,15),6);
InverseDestinationColor = hx::CreateConstEnum< BlendingFactor_obj >(HX_("InverseDestinationColor",a5,c3,e0,3d),10);
InverseSourceAlpha = hx::CreateConstEnum< BlendingFactor_obj >(HX_("InverseSourceAlpha",d3,1a,b9,46),5);
InverseSourceColor = hx::CreateConstEnum< BlendingFactor_obj >(HX_("InverseSourceColor",d8,e4,7e,6f),9);
SourceAlpha = hx::CreateConstEnum< BlendingFactor_obj >(HX_("SourceAlpha",63,04,cf,34),3);
SourceColor = hx::CreateConstEnum< BlendingFactor_obj >(HX_("SourceColor",68,ce,94,5d),7);
Undefined = hx::CreateConstEnum< BlendingFactor_obj >(HX_("Undefined",70,1e,dd,3e),0);
}


} // end namespace kha
} // end namespace graphics4
