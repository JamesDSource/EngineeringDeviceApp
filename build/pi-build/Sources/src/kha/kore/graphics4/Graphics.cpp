// Generated by Haxe 4.0.0-preview.5+1aaf080
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <hxinc/kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <hxinc/kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha_Video
#include <hxinc/kha/Video.h>
#endif
#ifndef INCLUDED_kha_arrays_Float32ArrayPrivate
#include <hxinc/kha/arrays/Float32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_graphics4_ConstantLocation
#include <hxinc/kha/graphics4/ConstantLocation.h>
#endif
#ifndef INCLUDED_kha_graphics4_CubeMap
#include <hxinc/kha/graphics4/CubeMap.h>
#endif
#ifndef INCLUDED_kha_graphics4_Graphics
#include <hxinc/kha/graphics4/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics4_IndexBuffer
#include <hxinc/kha/graphics4/IndexBuffer.h>
#endif
#ifndef INCLUDED_kha_graphics4_MipMapFilter
#include <hxinc/kha/graphics4/MipMapFilter.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineState
#include <hxinc/kha/graphics4/PipelineState.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineStateBase
#include <hxinc/kha/graphics4/PipelineStateBase.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureAddressing
#include <hxinc/kha/graphics4/TextureAddressing.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureFilter
#include <hxinc/kha/graphics4/TextureFilter.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureUnit
#include <hxinc/kha/graphics4/TextureUnit.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexBuffer
#include <hxinc/kha/graphics4/VertexBuffer.h>
#endif
#ifndef INCLUDED_kha_kore_graphics4_ConstantLocation
#include <hxinc/kha/kore/graphics4/ConstantLocation.h>
#endif
#ifndef INCLUDED_kha_kore_graphics4_Graphics
#include <hxinc/kha/kore/graphics4/Graphics.h>
#endif
#ifndef INCLUDED_kha_kore_graphics4_TextureUnit
#include <hxinc/kha/kore/graphics4/TextureUnit.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix3
#include <hxinc/kha/math/FastMatrix3.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix4
#include <hxinc/kha/math/FastMatrix4.h>
#endif
#ifndef INCLUDED_kha_math_FastVector2
#include <hxinc/kha/math/FastVector2.h>
#endif
#ifndef INCLUDED_kha_math_FastVector3
#include <hxinc/kha/math/FastVector3.h>
#endif
#ifndef INCLUDED_kha_math_FastVector4
#include <hxinc/kha/math/FastVector4.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_cfbfed328d063821_49_new,"kha.kore.graphics4.Graphics","new",0x244105cf,"kha.kore.graphics4.Graphics.new","kha/kore/graphics4/Graphics.hx",49,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_54_init,"kha.kore.graphics4.Graphics","init",0x915cc6c1,"kha.kore.graphics4.Graphics.init","kha/kore/graphics4/Graphics.hx",54,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_68_vsynced,"kha.kore.graphics4.Graphics","vsynced",0x5f12755f,"kha.kore.graphics4.Graphics.vsynced","kha/kore/graphics4/Graphics.hx",68,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_73_refreshRate,"kha.kore.graphics4.Graphics","refreshRate",0x0a969eca,"kha.kore.graphics4.Graphics.refreshRate","kha/kore/graphics4/Graphics.hx",73,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_76_clear,"kha.kore.graphics4.Graphics","clear",0x2a1420bc,"kha.kore.graphics4.Graphics.clear","kha/kore/graphics4/Graphics.hx",76,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_87_viewport,"kha.kore.graphics4.Graphics","viewport",0x69550497,"kha.kore.graphics4.Graphics.viewport","kha/kore/graphics4/Graphics.hx",87,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_94_clear2,"kha.kore.graphics4.Graphics","clear2",0xa78883f6,"kha.kore.graphics4.Graphics.clear2","kha/kore/graphics4/Graphics.hx",94,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_103_setVertexBuffer,"kha.kore.graphics4.Graphics","setVertexBuffer",0x7b3ea235,"kha.kore.graphics4.Graphics.setVertexBuffer","kha/kore/graphics4/Graphics.hx",103,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_116_setVertexBuffersInternal,"kha.kore.graphics4.Graphics","setVertexBuffersInternal",0xe0e23dfb,"kha.kore.graphics4.Graphics.setVertexBuffersInternal","kha/kore/graphics4/Graphics.hx",116,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_121_setVertexBuffers,"kha.kore.graphics4.Graphics","setVertexBuffers",0x5b8f4c9e,"kha.kore.graphics4.Graphics.setVertexBuffers","kha/kore/graphics4/Graphics.hx",121,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_134_setIndexBuffer,"kha.kore.graphics4.Graphics","setIndexBuffer",0xfa4a1421,"kha.kore.graphics4.Graphics.setIndexBuffer","kha/kore/graphics4/Graphics.hx",134,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_147_maxTextureSize,"kha.kore.graphics4.Graphics","maxTextureSize",0x676219e9,"kha.kore.graphics4.Graphics.maxTextureSize","kha/kore/graphics4/Graphics.hx",147,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_151_supportsNonPow2Textures,"kha.kore.graphics4.Graphics","supportsNonPow2Textures",0x1ded6b6a,"kha.kore.graphics4.Graphics.supportsNonPow2Textures","kha/kore/graphics4/Graphics.hx",151,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_154_setCubeMap,"kha.kore.graphics4.Graphics","setCubeMap",0x01e25796,"kha.kore.graphics4.Graphics.setCubeMap","kha/kore/graphics4/Graphics.hx",154,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_161_setCubeMapDepth,"kha.kore.graphics4.Graphics","setCubeMapDepth",0x5b21c98d,"kha.kore.graphics4.Graphics.setCubeMapDepth","kha/kore/graphics4/Graphics.hx",161,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_168_scissor,"kha.kore.graphics4.Graphics","scissor",0x498d410b,"kha.kore.graphics4.Graphics.scissor","kha/kore/graphics4/Graphics.hx",168,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_173_disableScissor,"kha.kore.graphics4.Graphics","disableScissor",0x5f4be605,"kha.kore.graphics4.Graphics.disableScissor","kha/kore/graphics4/Graphics.hx",173,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_179_renderTargetsInvertedY,"kha.kore.graphics4.Graphics","renderTargetsInvertedY",0x6d68a0c9,"kha.kore.graphics4.Graphics.renderTargetsInvertedY","kha/kore/graphics4/Graphics.hx",179,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_183_instancedRenderingAvailable,"kha.kore.graphics4.Graphics","instancedRenderingAvailable",0xe8517e5b,"kha.kore.graphics4.Graphics.instancedRenderingAvailable","kha/kore/graphics4/Graphics.hx",183,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_190_setTextureWrapNative,"kha.kore.graphics4.Graphics","setTextureWrapNative",0xb55b236b,"kha.kore.graphics4.Graphics.setTextureWrapNative","kha/kore/graphics4/Graphics.hx",190,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_199_setTexture3DWrapNative,"kha.kore.graphics4.Graphics","setTexture3DWrapNative",0xb97f9ddc,"kha.kore.graphics4.Graphics.setTexture3DWrapNative","kha/kore/graphics4/Graphics.hx",199,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_208_setTextureFiltersNative,"kha.kore.graphics4.Graphics","setTextureFiltersNative",0x958dc388,"kha.kore.graphics4.Graphics.setTextureFiltersNative","kha/kore/graphics4/Graphics.hx",208,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_217_setTexture3DFiltersNative,"kha.kore.graphics4.Graphics","setTexture3DFiltersNative",0xaea2a5b7,"kha.kore.graphics4.Graphics.setTexture3DFiltersNative","kha/kore/graphics4/Graphics.hx",217,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_222_getTextureAddressing,"kha.kore.graphics4.Graphics","getTextureAddressing",0x668e24a4,"kha.kore.graphics4.Graphics.getTextureAddressing","kha/kore/graphics4/Graphics.hx",222,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_233_getTextureFilter,"kha.kore.graphics4.Graphics","getTextureFilter",0xf9ca6dae,"kha.kore.graphics4.Graphics.getTextureFilter","kha/kore/graphics4/Graphics.hx",233,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_244_getTextureMipMapFilter,"kha.kore.graphics4.Graphics","getTextureMipMapFilter",0x80e4a1b6,"kha.kore.graphics4.Graphics.getTextureMipMapFilter","kha/kore/graphics4/Graphics.hx",244,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_254_setTextureParameters,"kha.kore.graphics4.Graphics","setTextureParameters",0x8088f714,"kha.kore.graphics4.Graphics.setTextureParameters","kha/kore/graphics4/Graphics.hx",254,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_259_setTexture3DParameters,"kha.kore.graphics4.Graphics","setTexture3DParameters",0x84ad7185,"kha.kore.graphics4.Graphics.setTexture3DParameters","kha/kore/graphics4/Graphics.hx",259,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_268_setTextureInternal,"kha.kore.graphics4.Graphics","setTextureInternal",0xc422d127,"kha.kore.graphics4.Graphics.setTextureInternal","kha/kore/graphics4/Graphics.hx",268,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_272_setTexture,"kha.kore.graphics4.Graphics","setTexture",0x13f2d3ca,"kha.kore.graphics4.Graphics.setTexture","kha/kore/graphics4/Graphics.hx",272,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_277_setTextureDepth,"kha.kore.graphics4.Graphics","setTextureDepth",0xda5e90d9,"kha.kore.graphics4.Graphics.setTextureDepth","kha/kore/graphics4/Graphics.hx",277,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_283_setTextureArray,"kha.kore.graphics4.Graphics","setTextureArray",0x28c40d6f,"kha.kore.graphics4.Graphics.setTextureArray","kha/kore/graphics4/Graphics.hx",283,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_289_setVideoTexture,"kha.kore.graphics4.Graphics","setVideoTexture",0xc3722451,"kha.kore.graphics4.Graphics.setVideoTexture","kha/kore/graphics4/Graphics.hx",289,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_297_setImageTextureInternal,"kha.kore.graphics4.Graphics","setImageTextureInternal",0x20b2b1ce,"kha.kore.graphics4.Graphics.setImageTextureInternal","kha/kore/graphics4/Graphics.hx",297,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_301_setImageTexture,"kha.kore.graphics4.Graphics","setImageTexture",0x993e3571,"kha.kore.graphics4.Graphics.setImageTexture","kha/kore/graphics4/Graphics.hx",301,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_319_setPipeline,"kha.kore.graphics4.Graphics","setPipeline",0x463b4153,"kha.kore.graphics4.Graphics.setPipeline","kha/kore/graphics4/Graphics.hx",319,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_322_setStencilReferenceValue,"kha.kore.graphics4.Graphics","setStencilReferenceValue",0xbbeec9f1,"kha.kore.graphics4.Graphics.setStencilReferenceValue","kha/kore/graphics4/Graphics.hx",322,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_327_setBool,"kha.kore.graphics4.Graphics","setBool",0x4b45dddb,"kha.kore.graphics4.Graphics.setBool","kha/kore/graphics4/Graphics.hx",327,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_333_setBoolPrivate,"kha.kore.graphics4.Graphics","setBoolPrivate",0xa8c7b868,"kha.kore.graphics4.Graphics.setBoolPrivate","kha/kore/graphics4/Graphics.hx",333,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_338_setInt,"kha.kore.graphics4.Graphics","setInt",0x0f48345e,"kha.kore.graphics4.Graphics.setInt","kha/kore/graphics4/Graphics.hx",338,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_344_setIntPrivate,"kha.kore.graphics4.Graphics","setIntPrivate",0x802c8845,"kha.kore.graphics4.Graphics.setIntPrivate","kha/kore/graphics4/Graphics.hx",344,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_349_setFloat,"kha.kore.graphics4.Graphics","setFloat",0xdd7ae6cb,"kha.kore.graphics4.Graphics.setFloat","kha/kore/graphics4/Graphics.hx",349,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_355_setFloatPrivate,"kha.kore.graphics4.Graphics","setFloatPrivate",0x2a0ead78,"kha.kore.graphics4.Graphics.setFloatPrivate","kha/kore/graphics4/Graphics.hx",355,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_360_setFloat2,"kha.kore.graphics4.Graphics","setFloat2",0xee0f0b07,"kha.kore.graphics4.Graphics.setFloat2","kha/kore/graphics4/Graphics.hx",360,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_366_setFloat2Private,"kha.kore.graphics4.Graphics","setFloat2Private",0x93d9c8bc,"kha.kore.graphics4.Graphics.setFloat2Private","kha/kore/graphics4/Graphics.hx",366,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_371_setFloat3,"kha.kore.graphics4.Graphics","setFloat3",0xee0f0b08,"kha.kore.graphics4.Graphics.setFloat3","kha/kore/graphics4/Graphics.hx",371,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_377_setFloat3Private,"kha.kore.graphics4.Graphics","setFloat3Private",0xcd0c3adb,"kha.kore.graphics4.Graphics.setFloat3Private","kha/kore/graphics4/Graphics.hx",377,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_382_setFloat4,"kha.kore.graphics4.Graphics","setFloat4",0xee0f0b09,"kha.kore.graphics4.Graphics.setFloat4","kha/kore/graphics4/Graphics.hx",382,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_388_setFloat4Private,"kha.kore.graphics4.Graphics","setFloat4Private",0x063eacfa,"kha.kore.graphics4.Graphics.setFloat4Private","kha/kore/graphics4/Graphics.hx",388,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_393_setVector2,"kha.kore.graphics4.Graphics","setVector2",0x4faf04fe,"kha.kore.graphics4.Graphics.setVector2","kha/kore/graphics4/Graphics.hx",393,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_399_setVector2Private,"kha.kore.graphics4.Graphics","setVector2Private",0x74c70ba5,"kha.kore.graphics4.Graphics.setVector2Private","kha/kore/graphics4/Graphics.hx",399,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_404_setVector3,"kha.kore.graphics4.Graphics","setVector3",0x4faf04ff,"kha.kore.graphics4.Graphics.setVector3","kha/kore/graphics4/Graphics.hx",404,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_410_setVector3Private,"kha.kore.graphics4.Graphics","setVector3Private",0xadf97dc4,"kha.kore.graphics4.Graphics.setVector3Private","kha/kore/graphics4/Graphics.hx",410,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_415_setVector4,"kha.kore.graphics4.Graphics","setVector4",0x4faf0500,"kha.kore.graphics4.Graphics.setVector4","kha/kore/graphics4/Graphics.hx",415,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_421_setVector4Private,"kha.kore.graphics4.Graphics","setVector4Private",0xe72befe3,"kha.kore.graphics4.Graphics.setVector4Private","kha/kore/graphics4/Graphics.hx",421,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_426_setFloats,"kha.kore.graphics4.Graphics","setFloats",0xee0f0b48,"kha.kore.graphics4.Graphics.setFloats","kha/kore/graphics4/Graphics.hx",426,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_432_setFloatsPrivate,"kha.kore.graphics4.Graphics","setFloatsPrivate",0x19a8c29b,"kha.kore.graphics4.Graphics.setFloatsPrivate","kha/kore/graphics4/Graphics.hx",432,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_437_setMatrix,"kha.kore.graphics4.Graphics","setMatrix",0x68811e32,"kha.kore.graphics4.Graphics.setMatrix","kha/kore/graphics4/Graphics.hx",437,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_448_setMatrixPrivate,"kha.kore.graphics4.Graphics","setMatrixPrivate",0x859940f1,"kha.kore.graphics4.Graphics.setMatrixPrivate","kha/kore/graphics4/Graphics.hx",448,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_453_setMatrix3,"kha.kore.graphics4.Graphics","setMatrix3",0x08794dc1,"kha.kore.graphics4.Graphics.setMatrix3","kha/kore/graphics4/Graphics.hx",453,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_463_setMatrix3Private,"kha.kore.graphics4.Graphics","setMatrix3Private",0x8ac2b142,"kha.kore.graphics4.Graphics.setMatrix3Private","kha/kore/graphics4/Graphics.hx",463,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_468_drawIndexedVertices,"kha.kore.graphics4.Graphics","drawIndexedVertices",0x712af4d5,"kha.kore.graphics4.Graphics.drawIndexedVertices","kha/kore/graphics4/Graphics.hx",468,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_475_drawAllIndexedVertices,"kha.kore.graphics4.Graphics","drawAllIndexedVertices",0x864219fe,"kha.kore.graphics4.Graphics.drawAllIndexedVertices","kha/kore/graphics4/Graphics.hx",475,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_482_drawSomeIndexedVertices,"kha.kore.graphics4.Graphics","drawSomeIndexedVertices",0xad718dc1,"kha.kore.graphics4.Graphics.drawSomeIndexedVertices","kha/kore/graphics4/Graphics.hx",482,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_487_drawIndexedVerticesInstanced,"kha.kore.graphics4.Graphics","drawIndexedVerticesInstanced",0xfeb9ab9a,"kha.kore.graphics4.Graphics.drawIndexedVerticesInstanced","kha/kore/graphics4/Graphics.hx",487,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_494_drawAllIndexedVerticesInstanced,"kha.kore.graphics4.Graphics","drawAllIndexedVerticesInstanced",0x9e031951,"kha.kore.graphics4.Graphics.drawAllIndexedVerticesInstanced","kha/kore/graphics4/Graphics.hx",494,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_501_drawSomeIndexedVerticesInstanced,"kha.kore.graphics4.Graphics","drawSomeIndexedVerticesInstanced",0x8586952e,"kha.kore.graphics4.Graphics.drawSomeIndexedVerticesInstanced","kha/kore/graphics4/Graphics.hx",501,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_506_renderToTexture,"kha.kore.graphics4.Graphics","renderToTexture",0xa2fc7a59,"kha.kore.graphics4.Graphics.renderToTexture","kha/kore/graphics4/Graphics.hx",506,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_525_renderToBackbuffer,"kha.kore.graphics4.Graphics","renderToBackbuffer",0x6b5bffa9,"kha.kore.graphics4.Graphics.renderToBackbuffer","kha/kore/graphics4/Graphics.hx",525,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_529_begin,"kha.kore.graphics4.Graphics","begin",0x920e9958,"kha.kore.graphics4.Graphics.begin","kha/kore/graphics4/Graphics.hx",529,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_545_beginFace,"kha.kore.graphics4.Graphics","beginFace",0xd9a10615,"kha.kore.graphics4.Graphics.beginFace","kha/kore/graphics4/Graphics.hx",545,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_548_beginEye,"kha.kore.graphics4.Graphics","beginEye",0x06b692f9,"kha.kore.graphics4.Graphics.beginEye","kha/kore/graphics4/Graphics.hx",548,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_552_end,"kha.kore.graphics4.Graphics","end",0x243a394a,"kha.kore.graphics4.Graphics.end","kha/kore/graphics4/Graphics.hx",552,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_557_flush,"kha.kore.graphics4.Graphics","flush",0xe45411f3,"kha.kore.graphics4.Graphics.flush","kha/kore/graphics4/Graphics.hx",557,0xdc695dc0)
HX_LOCAL_STACK_FRAME(_hx_pos_cfbfed328d063821_47_boot,"kha.kore.graphics4.Graphics","boot",0x8cbd0fe3,"kha.kore.graphics4.Graphics.boot","kha/kore/graphics4/Graphics.hx",47,0xdc695dc0)
namespace kha{
namespace kore{
namespace graphics4{

void Graphics_obj::__construct(::Dynamic target){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_49_new)
HXLINE(  50)		this->target = target;
HXLINE(  51)		this->init();
            	}

Dynamic Graphics_obj::__CreateEmpty() { return new Graphics_obj; }

void *Graphics_obj::_hx_vtable = 0;

Dynamic Graphics_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Graphics_obj > _hx_result = new Graphics_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Graphics_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x48784b19;
}

static ::kha::graphics4::Graphics_obj _hx_kha_kore_graphics4_Graphics__hx_kha_graphics4_Graphics= {
	( void (hx::Object::*)(::Array< ::Dynamic>))&::kha::kore::graphics4::Graphics_obj::begin,
	( void (hx::Object::*)(int))&::kha::kore::graphics4::Graphics_obj::beginFace,
	( void (hx::Object::*)(int))&::kha::kore::graphics4::Graphics_obj::beginEye,
	( void (hx::Object::*)())&::kha::kore::graphics4::Graphics_obj::end,
	( bool (hx::Object::*)())&::kha::kore::graphics4::Graphics_obj::vsynced,
	( int (hx::Object::*)())&::kha::kore::graphics4::Graphics_obj::refreshRate,
	( void (hx::Object::*)( ::Dynamic, ::Dynamic, ::Dynamic))&::kha::kore::graphics4::Graphics_obj::clear,
	( void (hx::Object::*)(int,int,int,int))&::kha::kore::graphics4::Graphics_obj::viewport,
	( void (hx::Object::*)(int,int,int,int))&::kha::kore::graphics4::Graphics_obj::scissor,
	( void (hx::Object::*)())&::kha::kore::graphics4::Graphics_obj::disableScissor,
	( void (hx::Object::*)( ::kha::graphics4::VertexBuffer))&::kha::kore::graphics4::Graphics_obj::setVertexBuffer,
	( void (hx::Object::*)(::Array< ::Dynamic>))&::kha::kore::graphics4::Graphics_obj::setVertexBuffers,
	( void (hx::Object::*)( ::kha::graphics4::IndexBuffer))&::kha::kore::graphics4::Graphics_obj::setIndexBuffer,
	( void (hx::Object::*)(::Dynamic, ::kha::Image))&::kha::kore::graphics4::Graphics_obj::setTexture,
	( void (hx::Object::*)(::Dynamic, ::kha::Image))&::kha::kore::graphics4::Graphics_obj::setTextureDepth,
	( void (hx::Object::*)(::Dynamic, ::kha::Image))&::kha::kore::graphics4::Graphics_obj::setTextureArray,
	( void (hx::Object::*)(::Dynamic, ::kha::Video))&::kha::kore::graphics4::Graphics_obj::setVideoTexture,
	( void (hx::Object::*)(::Dynamic, ::kha::Image))&::kha::kore::graphics4::Graphics_obj::setImageTexture,
	( void (hx::Object::*)(::Dynamic, ::kha::graphics4::TextureAddressing, ::kha::graphics4::TextureAddressing, ::kha::graphics4::TextureFilter, ::kha::graphics4::TextureFilter, ::kha::graphics4::MipMapFilter))&::kha::kore::graphics4::Graphics_obj::setTextureParameters,
	( void (hx::Object::*)(::Dynamic, ::kha::graphics4::TextureAddressing, ::kha::graphics4::TextureAddressing, ::kha::graphics4::TextureAddressing, ::kha::graphics4::TextureFilter, ::kha::graphics4::TextureFilter, ::kha::graphics4::MipMapFilter))&::kha::kore::graphics4::Graphics_obj::setTexture3DParameters,
	( void (hx::Object::*)(::Dynamic, ::kha::graphics4::CubeMap))&::kha::kore::graphics4::Graphics_obj::setCubeMap,
	( void (hx::Object::*)(::Dynamic, ::kha::graphics4::CubeMap))&::kha::kore::graphics4::Graphics_obj::setCubeMapDepth,
	( void (hx::Object::*)(int))&::kha::kore::graphics4::Graphics_obj::setStencilReferenceValue,
	( bool (hx::Object::*)())&::kha::kore::graphics4::Graphics_obj::renderTargetsInvertedY,
	( bool (hx::Object::*)())&::kha::kore::graphics4::Graphics_obj::instancedRenderingAvailable,
	( void (hx::Object::*)( ::kha::graphics4::PipelineState))&::kha::kore::graphics4::Graphics_obj::setPipeline,
	( void (hx::Object::*)(::Dynamic,bool))&::kha::kore::graphics4::Graphics_obj::setBool,
	( void (hx::Object::*)(::Dynamic,int))&::kha::kore::graphics4::Graphics_obj::setInt,
	( void (hx::Object::*)(::Dynamic,float))&::kha::kore::graphics4::Graphics_obj::setFloat,
	( void (hx::Object::*)(::Dynamic,float,float))&::kha::kore::graphics4::Graphics_obj::setFloat2,
	( void (hx::Object::*)(::Dynamic,float,float,float))&::kha::kore::graphics4::Graphics_obj::setFloat3,
	( void (hx::Object::*)(::Dynamic,float,float,float,float))&::kha::kore::graphics4::Graphics_obj::setFloat4,
	( void (hx::Object::*)(::Dynamic, ::kha::arrays::Float32ArrayPrivate))&::kha::kore::graphics4::Graphics_obj::setFloats,
	( void (hx::Object::*)(::Dynamic, ::kha::math::FastVector2))&::kha::kore::graphics4::Graphics_obj::setVector2,
	( void (hx::Object::*)(::Dynamic, ::kha::math::FastVector3))&::kha::kore::graphics4::Graphics_obj::setVector3,
	( void (hx::Object::*)(::Dynamic, ::kha::math::FastVector4))&::kha::kore::graphics4::Graphics_obj::setVector4,
	( void (hx::Object::*)(::Dynamic, ::kha::math::FastMatrix4))&::kha::kore::graphics4::Graphics_obj::setMatrix,
	( void (hx::Object::*)(::Dynamic, ::kha::math::FastMatrix3))&::kha::kore::graphics4::Graphics_obj::setMatrix3,
	( void (hx::Object::*)(hx::Null< int > ,hx::Null< int > ))&::kha::kore::graphics4::Graphics_obj::drawIndexedVertices,
	( void (hx::Object::*)(int,hx::Null< int > ,hx::Null< int > ))&::kha::kore::graphics4::Graphics_obj::drawIndexedVerticesInstanced,
	( void (hx::Object::*)())&::kha::kore::graphics4::Graphics_obj::flush,
};

void *Graphics_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xba2f5490: return &_hx_kha_kore_graphics4_Graphics__hx_kha_graphics4_Graphics;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void Graphics_obj::init(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_54_init)
HXLINE(  55)		if (hx::IsNull( this->target )) {
HXLINE(  55)			return;
            		}
HXLINE(  56)		if (::Std_obj::is(this->target,hx::ClassOf< ::kha::graphics4::CubeMap >())) {
HXLINE(  57)			 ::kha::graphics4::CubeMap cubeMap = hx::TCast<  ::kha::graphics4::CubeMap >::cast(this->target);
HXLINE(  58)			renderTarget = cubeMap->renderTarget;
            		}
            		else {
HXLINE(  61)			 ::kha::Image image = hx::TCast<  ::kha::Image >::cast(this->target);
HXLINE(  62)			renderTarget = image->renderTarget;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,init,(void))

bool Graphics_obj::vsynced(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_68_vsynced)
            	return Kore::Window::get(0)->vSynced();

HXDLIN(  68)		return true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,vsynced,return )

int Graphics_obj::refreshRate(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_73_refreshRate)
            	return Kore::Display::primary()->frequency();

HXDLIN(  73)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,refreshRate,return )

void Graphics_obj::clear( ::Dynamic color, ::Dynamic z, ::Dynamic stencil){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_76_clear)
HXLINE(  77)		int flags = 0;
HXLINE(  78)		if (hx::IsNotNull( color )) {
HXLINE(  78)			flags = (flags | 1);
            		}
HXLINE(  79)		if (hx::IsNotNull( z )) {
HXLINE(  79)			flags = (flags | 2);
            		}
HXLINE(  80)		if (hx::IsNotNull( stencil )) {
HXLINE(  80)			flags = (flags | 4);
            		}
HXLINE(  81)		int _hx_tmp;
HXDLIN(  81)		if (hx::IsNull( color )) {
HXLINE(  81)			_hx_tmp = 0;
            		}
            		else {
HXLINE(  81)			_hx_tmp = ( (int)(color) );
            		}
HXDLIN(  81)		this->clear2(flags,_hx_tmp,( (Float)(z) ),( (int)(stencil) ));
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,clear,(void))

void Graphics_obj::viewport(int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_87_viewport)
            	
		Kore::Graphics4::viewport(x,y,width,height);
	

            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,viewport,(void))

void Graphics_obj::clear2(int flags,int color,Float z,int stencil){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_94_clear2)
            	
		Kore::Graphics4::clear(flags, color, z, stencil);
	

            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,clear2,(void))

void Graphics_obj::setVertexBuffer( ::kha::graphics4::VertexBuffer vertexBuffer){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_103_setVertexBuffer)
            	Kore::Graphics4::setVertexBuffer(*vertexBuffer->buffer);

            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setVertexBuffer,(void))

void Graphics_obj::setVertexBuffersInternal( ::kha::graphics4::VertexBuffer vb0, ::kha::graphics4::VertexBuffer vb1, ::kha::graphics4::VertexBuffer vb2, ::kha::graphics4::VertexBuffer vb3,int count){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_116_setVertexBuffersInternal)
            	
		Kore::Graphics4::VertexBuffer* vertexBuffers[4] = {
			vb0 == null() ? nullptr : vb0->buffer,
			vb1 == null() ? nullptr : vb1->buffer,
			vb2 == null() ? nullptr : vb2->buffer,
			vb3 == null() ? nullptr : vb3->buffer
		};
		Kore::Graphics4::setVertexBuffers(vertexBuffers, count);
	

            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,setVertexBuffersInternal,(void))

void Graphics_obj::setVertexBuffers(::Array< ::Dynamic> vertexBuffers){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_121_setVertexBuffers)
HXLINE( 122)		 ::kha::graphics4::VertexBuffer _hx_tmp;
HXDLIN( 122)		if ((vertexBuffers->length > 0)) {
HXLINE( 122)			_hx_tmp = vertexBuffers->__get(0).StaticCast<  ::kha::graphics4::VertexBuffer >();
            		}
            		else {
HXLINE( 122)			_hx_tmp = null();
            		}
HXLINE( 123)		 ::kha::graphics4::VertexBuffer _hx_tmp1;
HXDLIN( 123)		if ((vertexBuffers->length > 1)) {
HXLINE( 123)			_hx_tmp1 = vertexBuffers->__get(1).StaticCast<  ::kha::graphics4::VertexBuffer >();
            		}
            		else {
HXLINE( 123)			_hx_tmp1 = null();
            		}
HXLINE( 124)		 ::kha::graphics4::VertexBuffer _hx_tmp2;
HXDLIN( 124)		if ((vertexBuffers->length > 2)) {
HXLINE( 124)			_hx_tmp2 = vertexBuffers->__get(2).StaticCast<  ::kha::graphics4::VertexBuffer >();
            		}
            		else {
HXLINE( 124)			_hx_tmp2 = null();
            		}
HXLINE( 125)		 ::kha::graphics4::VertexBuffer _hx_tmp3;
HXDLIN( 125)		if ((vertexBuffers->length > 3)) {
HXLINE( 125)			_hx_tmp3 = vertexBuffers->__get(3).StaticCast<  ::kha::graphics4::VertexBuffer >();
            		}
            		else {
HXLINE( 125)			_hx_tmp3 = null();
            		}
HXLINE( 121)		this->setVertexBuffersInternal(_hx_tmp,_hx_tmp1,_hx_tmp2,_hx_tmp3,vertexBuffers->length);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setVertexBuffers,(void))

void Graphics_obj::setIndexBuffer( ::kha::graphics4::IndexBuffer indexBuffer){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_134_setIndexBuffer)
            	Kore::Graphics4::setIndexBuffer(*indexBuffer->buffer);

            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setIndexBuffer,(void))

int Graphics_obj::maxTextureSize(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_147_maxTextureSize)
HXDLIN( 147)		return 4096;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,maxTextureSize,return )

bool Graphics_obj::supportsNonPow2Textures(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_151_supportsNonPow2Textures)
HXDLIN( 151)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,supportsNonPow2Textures,return )

void Graphics_obj::setCubeMap(::Dynamic unit, ::kha::graphics4::CubeMap cubeMap){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_154_setCubeMap)
HXLINE( 155)		if (hx::IsNull( cubeMap )) {
HXLINE( 155)			return;
            		}
HXLINE( 156)		 ::kha::kore::graphics4::TextureUnit koreUnit = hx::TCast<  ::kha::kore::graphics4::TextureUnit >::cast(unit);
HXLINE( 157)		if (cubeMap->texture != nullptr) Kore::Graphics4::setTexture(koreUnit->unit, cubeMap->texture);
HXLINE( 158)		else cubeMap->renderTarget->useColorAsTexture(koreUnit->unit);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setCubeMap,(void))

void Graphics_obj::setCubeMapDepth(::Dynamic unit, ::kha::graphics4::CubeMap cubeMap){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_161_setCubeMapDepth)
HXLINE( 162)		if (hx::IsNull( cubeMap )) {
HXLINE( 162)			return;
            		}
HXLINE( 163)		 ::kha::kore::graphics4::TextureUnit koreUnit = hx::TCast<  ::kha::kore::graphics4::TextureUnit >::cast(unit);
HXLINE( 164)		cubeMap->renderTarget->useDepthAsTexture(koreUnit->unit);;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setCubeMapDepth,(void))

void Graphics_obj::scissor(int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_168_scissor)
            	Kore::Graphics4::scissor(x, y, width, height);

            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,scissor,(void))

void Graphics_obj::disableScissor(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_173_disableScissor)
            	Kore::Graphics4::disableScissor();

            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,disableScissor,(void))

bool Graphics_obj::renderTargetsInvertedY(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_179_renderTargetsInvertedY)
            	return Kore::Graphics4::renderTargetsInvertedY();

HXDLIN( 179)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,renderTargetsInvertedY,return )

bool Graphics_obj::instancedRenderingAvailable(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_183_instancedRenderingAvailable)
HXDLIN( 183)		return true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,instancedRenderingAvailable,return )

void Graphics_obj::setTextureWrapNative( ::kha::kore::graphics4::TextureUnit unit,int uWrap,int vWrap){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_190_setTextureWrapNative)
            	
		Kore::Graphics4::setTextureAddressing(unit->unit, Kore::Graphics4::U, (Kore::Graphics4::TextureAddressing)uWrap);
		Kore::Graphics4::setTextureAddressing(unit->unit, Kore::Graphics4::V, (Kore::Graphics4::TextureAddressing)vWrap);
	

            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,setTextureWrapNative,(void))

void Graphics_obj::setTexture3DWrapNative( ::kha::kore::graphics4::TextureUnit unit,int uWrap,int vWrap,int wWrap){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_199_setTexture3DWrapNative)
            	
		Kore::Graphics4::setTexture3DAddressing(unit->unit, Kore::Graphics4::U, (Kore::Graphics4::TextureAddressing)uWrap);
		Kore::Graphics4::setTexture3DAddressing(unit->unit, Kore::Graphics4::V, (Kore::Graphics4::TextureAddressing)vWrap);
		Kore::Graphics4::setTexture3DAddressing(unit->unit, Kore::Graphics4::W, (Kore::Graphics4::TextureAddressing)wWrap);
	

            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,setTexture3DWrapNative,(void))

void Graphics_obj::setTextureFiltersNative( ::kha::kore::graphics4::TextureUnit unit,int minificationFilter,int magnificationFilter,int mipMapFilter){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_208_setTextureFiltersNative)
            	
		Kore::Graphics4::setTextureMinificationFilter(unit->unit, (Kore::Graphics4::TextureFilter)minificationFilter);
		Kore::Graphics4::setTextureMagnificationFilter(unit->unit, (Kore::Graphics4::TextureFilter)magnificationFilter);
		Kore::Graphics4::setTextureMipmapFilter(unit->unit, (Kore::Graphics4::MipmapFilter)mipMapFilter);
	

            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,setTextureFiltersNative,(void))

void Graphics_obj::setTexture3DFiltersNative( ::kha::kore::graphics4::TextureUnit unit,int minificationFilter,int magnificationFilter,int mipMapFilter){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_217_setTexture3DFiltersNative)
            	
		Kore::Graphics4::setTexture3DMinificationFilter(unit->unit, (Kore::Graphics4::TextureFilter)minificationFilter);
		Kore::Graphics4::setTexture3DMagnificationFilter(unit->unit, (Kore::Graphics4::TextureFilter)magnificationFilter);
		Kore::Graphics4::setTexture3DMipmapFilter(unit->unit, (Kore::Graphics4::MipmapFilter)mipMapFilter);
	

            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,setTexture3DFiltersNative,(void))

int Graphics_obj::getTextureAddressing( ::kha::graphics4::TextureAddressing addressing){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_222_getTextureAddressing)
HXDLIN( 222)		switch((int)(addressing->_hx_getIndex())){
            			case (int)0: {
HXLINE( 224)				return 0;
            			}
            			break;
            			case (int)1: {
HXLINE( 226)				return 1;
            			}
            			break;
            			case (int)2: {
HXLINE( 228)				return 2;
            			}
            			break;
            		}
HXLINE( 222)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,getTextureAddressing,return )

int Graphics_obj::getTextureFilter( ::kha::graphics4::TextureFilter filter){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_233_getTextureFilter)
HXDLIN( 233)		switch((int)(filter->_hx_getIndex())){
            			case (int)0: {
HXLINE( 235)				return 0;
            			}
            			break;
            			case (int)1: {
HXLINE( 237)				return 1;
            			}
            			break;
            			case (int)2: {
HXLINE( 239)				return 2;
            			}
            			break;
            		}
HXLINE( 233)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,getTextureFilter,return )

int Graphics_obj::getTextureMipMapFilter( ::kha::graphics4::MipMapFilter filter){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_244_getTextureMipMapFilter)
HXDLIN( 244)		switch((int)(filter->_hx_getIndex())){
            			case (int)0: {
HXLINE( 246)				return 0;
            			}
            			break;
            			case (int)1: {
HXLINE( 248)				return 1;
            			}
            			break;
            			case (int)2: {
HXLINE( 250)				return 2;
            			}
            			break;
            		}
HXLINE( 244)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,getTextureMipMapFilter,return )

void Graphics_obj::setTextureParameters(::Dynamic texunit, ::kha::graphics4::TextureAddressing uAddressing, ::kha::graphics4::TextureAddressing vAddressing, ::kha::graphics4::TextureFilter minificationFilter, ::kha::graphics4::TextureFilter magnificationFilter, ::kha::graphics4::MipMapFilter mipmapFilter){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_254_setTextureParameters)
HXLINE( 255)		int _hx_tmp = this->getTextureAddressing(uAddressing);
HXDLIN( 255)		this->setTextureWrapNative(( ( ::kha::kore::graphics4::TextureUnit)(texunit) ),_hx_tmp,this->getTextureAddressing(vAddressing));
HXLINE( 256)		int _hx_tmp1 = this->getTextureFilter(minificationFilter);
HXDLIN( 256)		int _hx_tmp2 = this->getTextureFilter(magnificationFilter);
HXDLIN( 256)		this->setTextureFiltersNative(( ( ::kha::kore::graphics4::TextureUnit)(texunit) ),_hx_tmp1,_hx_tmp2,this->getTextureMipMapFilter(mipmapFilter));
            	}


HX_DEFINE_DYNAMIC_FUNC6(Graphics_obj,setTextureParameters,(void))

void Graphics_obj::setTexture3DParameters(::Dynamic texunit, ::kha::graphics4::TextureAddressing uAddressing, ::kha::graphics4::TextureAddressing vAddressing, ::kha::graphics4::TextureAddressing wAddressing, ::kha::graphics4::TextureFilter minificationFilter, ::kha::graphics4::TextureFilter magnificationFilter, ::kha::graphics4::MipMapFilter mipmapFilter){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_259_setTexture3DParameters)
HXLINE( 260)		int _hx_tmp = this->getTextureAddressing(uAddressing);
HXDLIN( 260)		int _hx_tmp1 = this->getTextureAddressing(vAddressing);
HXDLIN( 260)		this->setTexture3DWrapNative(( ( ::kha::kore::graphics4::TextureUnit)(texunit) ),_hx_tmp,_hx_tmp1,this->getTextureAddressing(wAddressing));
HXLINE( 261)		int _hx_tmp2 = this->getTextureFilter(minificationFilter);
HXDLIN( 261)		int _hx_tmp3 = this->getTextureFilter(magnificationFilter);
HXDLIN( 261)		this->setTexture3DFiltersNative(( ( ::kha::kore::graphics4::TextureUnit)(texunit) ),_hx_tmp2,_hx_tmp3,this->getTextureMipMapFilter(mipmapFilter));
            	}


HX_DEFINE_DYNAMIC_FUNC7(Graphics_obj,setTexture3DParameters,(void))

void Graphics_obj::setTextureInternal( ::kha::kore::graphics4::TextureUnit unit, ::kha::Image texture){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_268_setTextureInternal)
            	
		if (texture->texture != nullptr) Kore::Graphics4::setTexture(unit->unit, texture->texture);
		else texture->renderTarget->useColorAsTexture(unit->unit);
	

            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setTextureInternal,(void))

void Graphics_obj::setTexture(::Dynamic unit, ::kha::Image texture){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_272_setTexture)
HXLINE( 273)		if (hx::IsNull( texture )) {
HXLINE( 273)			return;
            		}
HXLINE( 274)		this->setTextureInternal(( ( ::kha::kore::graphics4::TextureUnit)(unit) ),texture);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setTexture,(void))

void Graphics_obj::setTextureDepth(::Dynamic unit, ::kha::Image texture){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_277_setTextureDepth)
HXLINE( 278)		if (hx::IsNull( texture )) {
HXLINE( 278)			return;
            		}
HXLINE( 279)		 ::kha::kore::graphics4::TextureUnit koreUnit = hx::TCast<  ::kha::kore::graphics4::TextureUnit >::cast(unit);
HXLINE( 280)		texture->renderTarget->useDepthAsTexture(koreUnit->unit);;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setTextureDepth,(void))

void Graphics_obj::setTextureArray(::Dynamic unit, ::kha::Image texture){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_283_setTextureArray)
HXLINE( 284)		if (hx::IsNull( texture )) {
HXLINE( 284)			return;
            		}
HXLINE( 285)		 ::kha::kore::graphics4::TextureUnit koreUnit = hx::TCast<  ::kha::kore::graphics4::TextureUnit >::cast(unit);
HXLINE( 286)		if (texture->textureArray != nullptr) Kore::Graphics4::setTextureArray(koreUnit->unit, texture->textureArray);;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setTextureArray,(void))

void Graphics_obj::setVideoTexture(::Dynamic unit, ::kha::Video texture){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_289_setVideoTexture)
HXLINE( 290)		if (hx::IsNull( texture )) {
HXLINE( 290)			return;
            		}
HXLINE( 291)		this->setTextureInternal(( ( ::kha::kore::graphics4::TextureUnit)(unit) ),::kha::Image_obj::createFromVideo(texture));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setVideoTexture,(void))

void Graphics_obj::setImageTextureInternal( ::kha::kore::graphics4::TextureUnit unit, ::kha::Image texture){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_297_setImageTextureInternal)
            	
		Kore::Graphics4::setImageTexture(unit->unit, texture->texture);
	

            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setImageTextureInternal,(void))

void Graphics_obj::setImageTexture(::Dynamic unit, ::kha::Image texture){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_301_setImageTexture)
HXLINE( 302)		if (hx::IsNull( texture )) {
HXLINE( 302)			return;
            		}
HXLINE( 303)		this->setImageTextureInternal(( ( ::kha::kore::graphics4::TextureUnit)(unit) ),texture);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setImageTexture,(void))

void Graphics_obj::setPipeline( ::kha::graphics4::PipelineState pipe){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_319_setPipeline)
HXDLIN( 319)		pipe->set();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setPipeline,(void))

void Graphics_obj::setStencilReferenceValue(int value){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_322_setStencilReferenceValue)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setStencilReferenceValue,(void))

void Graphics_obj::setBool(::Dynamic location,bool value){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_327_setBool)
HXDLIN( 327)		this->setBoolPrivate(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),value);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setBool,(void))

void Graphics_obj::setBoolPrivate( ::kha::kore::graphics4::ConstantLocation location,bool value){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_333_setBoolPrivate)
            	
		Kore::Graphics4::setBool(location->location, value);
	

            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setBoolPrivate,(void))

void Graphics_obj::setInt(::Dynamic location,int value){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_338_setInt)
HXDLIN( 338)		this->setIntPrivate(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),value);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setInt,(void))

void Graphics_obj::setIntPrivate( ::kha::kore::graphics4::ConstantLocation location,int value){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_344_setIntPrivate)
            	
		Kore::Graphics4::setInt(location->location, value);
	

            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setIntPrivate,(void))

void Graphics_obj::setFloat(::Dynamic location,float value){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_349_setFloat)
HXDLIN( 349)		this->setFloatPrivate(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),value);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setFloat,(void))

void Graphics_obj::setFloatPrivate( ::kha::kore::graphics4::ConstantLocation location,float value){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_355_setFloatPrivate)
            	
		Kore::Graphics4::setFloat(location->location, value);
	

            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setFloatPrivate,(void))

void Graphics_obj::setFloat2(::Dynamic location,float value1,float value2){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_360_setFloat2)
HXDLIN( 360)		this->setFloat2Private(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),value1,value2);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,setFloat2,(void))

void Graphics_obj::setFloat2Private( ::kha::kore::graphics4::ConstantLocation location,float value1,float value2){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_366_setFloat2Private)
            	
		Kore::Graphics4::setFloat2(location->location, value1, value2);
	

            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,setFloat2Private,(void))

void Graphics_obj::setFloat3(::Dynamic location,float value1,float value2,float value3){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_371_setFloat3)
HXDLIN( 371)		this->setFloat3Private(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),value1,value2,value3);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,setFloat3,(void))

void Graphics_obj::setFloat3Private( ::kha::kore::graphics4::ConstantLocation location,float value1,float value2,float value3){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_377_setFloat3Private)
            	
		Kore::Graphics4::setFloat3(location->location, value1, value2, value3);
	

            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,setFloat3Private,(void))

void Graphics_obj::setFloat4(::Dynamic location,float value1,float value2,float value3,float value4){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_382_setFloat4)
HXDLIN( 382)		this->setFloat4Private(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),value1,value2,value3,value4);
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,setFloat4,(void))

void Graphics_obj::setFloat4Private( ::kha::kore::graphics4::ConstantLocation location,float value1,float value2,float value3,float value4){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_388_setFloat4Private)
            	
		Kore::Graphics4::setFloat4(location->location, value1, value2, value3, value4);
	

            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,setFloat4Private,(void))

void Graphics_obj::setVector2(::Dynamic location, ::kha::math::FastVector2 value){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_393_setVector2)
HXDLIN( 393)		this->setVector2Private(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),value->x,value->y);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setVector2,(void))

void Graphics_obj::setVector2Private( ::kha::kore::graphics4::ConstantLocation location,float x,float y){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_399_setVector2Private)
            	
		Kore::Graphics4::setFloat2(location->location, x, y);
	

            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,setVector2Private,(void))

void Graphics_obj::setVector3(::Dynamic location, ::kha::math::FastVector3 value){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_404_setVector3)
HXDLIN( 404)		this->setVector3Private(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),value->x,value->y,value->z);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setVector3,(void))

void Graphics_obj::setVector3Private( ::kha::kore::graphics4::ConstantLocation location,float x,float y,float z){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_410_setVector3Private)
            	
		Kore::Graphics4::setFloat3(location->location, x, y, z);
	

            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,setVector3Private,(void))

void Graphics_obj::setVector4(::Dynamic location, ::kha::math::FastVector4 value){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_415_setVector4)
HXDLIN( 415)		this->setVector4Private(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),value->x,value->y,value->z,value->w);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setVector4,(void))

void Graphics_obj::setVector4Private( ::kha::kore::graphics4::ConstantLocation location,float x,float y,float z,float w){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_421_setVector4Private)
            	
		Kore::Graphics4::setFloat4(location->location, x, y, z, w);
	

            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,setVector4Private,(void))

void Graphics_obj::setFloats(::Dynamic location, ::kha::arrays::Float32ArrayPrivate values){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_426_setFloats)
HXDLIN( 426)		this->setFloatsPrivate(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),values);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setFloats,(void))

void Graphics_obj::setFloatsPrivate( ::kha::kore::graphics4::ConstantLocation location, ::kha::arrays::Float32ArrayPrivate values){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_432_setFloatsPrivate)
            	
		Kore::Graphics4::setFloats(location->location, values->self.data, values->self.length());
	

            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setFloatsPrivate,(void))

void Graphics_obj::setMatrix(::Dynamic location, ::kha::math::FastMatrix4 matrix){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_437_setMatrix)
HXDLIN( 437)		this->setMatrixPrivate(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),matrix);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setMatrix,(void))

void Graphics_obj::setMatrixPrivate( ::kha::kore::graphics4::ConstantLocation location, ::kha::math::FastMatrix4 matrix){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_448_setMatrixPrivate)
            	
		Kore::mat4 value;
		value.Set(0, 0, matrix->_00); value.Set(0, 1, matrix->_10); value.Set(0, 2, matrix->_20); value.Set(0, 3, matrix->_30);
		value.Set(1, 0, matrix->_01); value.Set(1, 1, matrix->_11); value.Set(1, 2, matrix->_21); value.Set(1, 3, matrix->_31);
		value.Set(2, 0, matrix->_02); value.Set(2, 1, matrix->_12); value.Set(2, 2, matrix->_22); value.Set(2, 3, matrix->_32);
		value.Set(3, 0, matrix->_03); value.Set(3, 1, matrix->_13); value.Set(3, 2, matrix->_23); value.Set(3, 3, matrix->_33);
		Kore::Graphics4::setMatrix(location->location, value);
	

            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setMatrixPrivate,(void))

void Graphics_obj::setMatrix3(::Dynamic location, ::kha::math::FastMatrix3 matrix){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_453_setMatrix3)
HXDLIN( 453)		this->setMatrix3Private(( ( ::kha::kore::graphics4::ConstantLocation)(location) ),matrix);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setMatrix3,(void))

void Graphics_obj::setMatrix3Private( ::kha::kore::graphics4::ConstantLocation location, ::kha::math::FastMatrix3 matrix){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_463_setMatrix3Private)
            	
		Kore::mat3 value;
		value.Set(0, 0, matrix->_00); value.Set(0, 1, matrix->_10); value.Set(0, 2, matrix->_20);
		value.Set(1, 0, matrix->_01); value.Set(1, 1, matrix->_11); value.Set(1, 2, matrix->_21);
		value.Set(2, 0, matrix->_02); value.Set(2, 1, matrix->_12); value.Set(2, 2, matrix->_22);
		Kore::Graphics4::setMatrix(location->location, value);
	

            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,setMatrix3Private,(void))

void Graphics_obj::drawIndexedVertices(hx::Null< int >  __o_start,hx::Null< int >  __o_count){
            		int start = __o_start.Default(0);
            		int count = __o_count.Default(-1);
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_468_drawIndexedVertices)
HXDLIN( 468)		if ((count < 0)) {
HXDLIN( 468)			this->drawAllIndexedVertices();
            		}
            		else {
HXLINE( 469)			this->drawSomeIndexedVertices(start,count);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,drawIndexedVertices,(void))

void Graphics_obj::drawAllIndexedVertices(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_475_drawAllIndexedVertices)
            	
		Kore::Graphics4::drawIndexedVertices();
	

            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,drawAllIndexedVertices,(void))

void Graphics_obj::drawSomeIndexedVertices(int start,int count){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_482_drawSomeIndexedVertices)
            	
		Kore::Graphics4::drawIndexedVertices(start, count);
	

            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,drawSomeIndexedVertices,(void))

void Graphics_obj::drawIndexedVerticesInstanced(int instanceCount,hx::Null< int >  __o_start,hx::Null< int >  __o_count){
            		int start = __o_start.Default(0);
            		int count = __o_count.Default(-1);
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_487_drawIndexedVerticesInstanced)
HXDLIN( 487)		if ((count < 0)) {
HXDLIN( 487)			this->drawAllIndexedVerticesInstanced(instanceCount);
            		}
            		else {
HXLINE( 488)			this->drawSomeIndexedVerticesInstanced(instanceCount,start,count);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,drawIndexedVerticesInstanced,(void))

void Graphics_obj::drawAllIndexedVerticesInstanced(int instanceCount){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_494_drawAllIndexedVerticesInstanced)
            	
		Kore::Graphics4::drawIndexedVerticesInstanced(instanceCount);
	

            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,drawAllIndexedVerticesInstanced,(void))

void Graphics_obj::drawSomeIndexedVerticesInstanced(int instanceCount,int start,int count){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_501_drawSomeIndexedVerticesInstanced)
            	
		Kore::Graphics4::drawIndexedVerticesInstanced(instanceCount, start, count);
	

            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,drawSomeIndexedVerticesInstanced,(void))

void Graphics_obj::renderToTexture(::Array< ::Dynamic> additionalRenderTargets){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_506_renderToTexture)
HXDLIN( 506)		if (hx::IsNotNull( additionalRenderTargets )) {
HXLINE( 507)			int len = additionalRenderTargets->length;
HXLINE( 509)			 ::kha::Image image1 = hx::TCast<  ::kha::Image >::cast(additionalRenderTargets->__get(0));
HXLINE( 510)			 ::kha::Image image2 = hx::TCast<  ::kha::Image >::cast(additionalRenderTargets->__get(1));
HXLINE( 511)			 ::kha::Image image3 = hx::TCast<  ::kha::Image >::cast(additionalRenderTargets->__get(2));
HXLINE( 512)			 ::kha::Image image4 = hx::TCast<  ::kha::Image >::cast(additionalRenderTargets->__get(3));
HXLINE( 513)			 ::kha::Image image5 = hx::TCast<  ::kha::Image >::cast(additionalRenderTargets->__get(4));
HXLINE( 514)			 ::kha::Image image6 = hx::TCast<  ::kha::Image >::cast(additionalRenderTargets->__get(5));
HXLINE( 515)			 ::kha::Image image7 = hx::TCast<  ::kha::Image >::cast(additionalRenderTargets->__get(6));
HXLINE( 517)			Kore::Graphics4::RenderTarget* renderTargets[8] = { renderTarget, image1 == null() ? nullptr : image1->renderTarget, image2 == null() ? nullptr : image2->renderTarget, image3 == null() ? nullptr : image3->renderTarget, image4 == null() ? nullptr : image4->renderTarget, image5 == null() ? nullptr : image5->renderTarget, image6 == null() ? nullptr : image6->renderTarget, image7 == null() ? nullptr : image7->renderTarget }; Kore::Graphics4::setRenderTargets(renderTargets, len + 1);;
            		}
            		else {
HXLINE( 520)			Kore::Graphics4::setRenderTarget(renderTarget);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,renderToTexture,(void))

void Graphics_obj::renderToBackbuffer(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_525_renderToBackbuffer)
            	Kore::Graphics4::restoreRenderTarget();

            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,renderToBackbuffer,(void))

void Graphics_obj::begin(::Array< ::Dynamic> additionalRenderTargets){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_529_begin)
HXLINE( 530)		int win;
HXDLIN( 530)		if (hx::IsNull( this->window )) {
HXLINE( 530)			win = 0;
            		}
            		else {
HXLINE( 530)			win = ( (int)(this->window) );
            		}
HXLINE( 531)		if ((win != ::kha::kore::graphics4::Graphics_obj::lastWindow)) {
HXLINE( 532)			if ((::kha::kore::graphics4::Graphics_obj::lastWindow != -1)) {
HXLINE( 533)				Kore::Graphics4::begin(lastWindow);;
            			}
HXLINE( 535)			Kore::Graphics4::begin(win);;
HXLINE( 536)			::kha::kore::graphics4::Graphics_obj::lastWindow = win;
            		}
HXLINE( 538)		if (hx::IsNull( this->target )) {
HXLINE( 539)			this->renderToBackbuffer();
            		}
            		else {
HXLINE( 541)			this->renderToTexture(additionalRenderTargets);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,begin,(void))

void Graphics_obj::beginFace(int face){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_545_beginFace)
HXDLIN( 545)		Kore::Graphics4::setRenderTargetFace(renderTarget, face);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,beginFace,(void))

void Graphics_obj::beginEye(int eye){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_548_beginEye)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,beginEye,(void))

void Graphics_obj::end(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_552_end)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,end,(void))

void Graphics_obj::flush(){
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_557_flush)
            	Kore::Graphics4::flush();

            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,flush,(void))

int Graphics_obj::lastWindow;


hx::ObjectPtr< Graphics_obj > Graphics_obj::__new(::Dynamic target) {
	hx::ObjectPtr< Graphics_obj > __this = new Graphics_obj();
	__this->__construct(target);
	return __this;
}

hx::ObjectPtr< Graphics_obj > Graphics_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic target) {
	Graphics_obj *__this = (Graphics_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Graphics_obj), true, "kha.kore.graphics4.Graphics"));
	*(void **)__this = Graphics_obj::_hx_vtable;
	__this->__construct(target);
	return __this;
}

Graphics_obj::Graphics_obj()
{
}

void Graphics_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Graphics);
	HX_MARK_MEMBER_NAME(target,"target");
	HX_MARK_MEMBER_NAME(window,"window");
	HX_MARK_END_CLASS();
}

void Graphics_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(target,"target");
	HX_VISIT_MEMBER_NAME(window,"window");
}

hx::Val Graphics_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { return hx::Val( end_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"init") ) { return hx::Val( init_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn() ); }
		if (HX_FIELD_EQ(inName,"begin") ) { return hx::Val( begin_dyn() ); }
		if (HX_FIELD_EQ(inName,"flush") ) { return hx::Val( flush_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"target") ) { return hx::Val( target ); }
		if (HX_FIELD_EQ(inName,"window") ) { return hx::Val( window ); }
		if (HX_FIELD_EQ(inName,"clear2") ) { return hx::Val( clear2_dyn() ); }
		if (HX_FIELD_EQ(inName,"setInt") ) { return hx::Val( setInt_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"vsynced") ) { return hx::Val( vsynced_dyn() ); }
		if (HX_FIELD_EQ(inName,"scissor") ) { return hx::Val( scissor_dyn() ); }
		if (HX_FIELD_EQ(inName,"setBool") ) { return hx::Val( setBool_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"viewport") ) { return hx::Val( viewport_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloat") ) { return hx::Val( setFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"beginEye") ) { return hx::Val( beginEye_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"setFloat2") ) { return hx::Val( setFloat2_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloat3") ) { return hx::Val( setFloat3_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloat4") ) { return hx::Val( setFloat4_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloats") ) { return hx::Val( setFloats_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMatrix") ) { return hx::Val( setMatrix_dyn() ); }
		if (HX_FIELD_EQ(inName,"beginFace") ) { return hx::Val( beginFace_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"setCubeMap") ) { return hx::Val( setCubeMap_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTexture") ) { return hx::Val( setTexture_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVector2") ) { return hx::Val( setVector2_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVector3") ) { return hx::Val( setVector3_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVector4") ) { return hx::Val( setVector4_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMatrix3") ) { return hx::Val( setMatrix3_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"refreshRate") ) { return hx::Val( refreshRate_dyn() ); }
		if (HX_FIELD_EQ(inName,"setPipeline") ) { return hx::Val( setPipeline_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"setIntPrivate") ) { return hx::Val( setIntPrivate_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"setIndexBuffer") ) { return hx::Val( setIndexBuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"maxTextureSize") ) { return hx::Val( maxTextureSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"disableScissor") ) { return hx::Val( disableScissor_dyn() ); }
		if (HX_FIELD_EQ(inName,"setBoolPrivate") ) { return hx::Val( setBoolPrivate_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"setVertexBuffer") ) { return hx::Val( setVertexBuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"setCubeMapDepth") ) { return hx::Val( setCubeMapDepth_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTextureDepth") ) { return hx::Val( setTextureDepth_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTextureArray") ) { return hx::Val( setTextureArray_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVideoTexture") ) { return hx::Val( setVideoTexture_dyn() ); }
		if (HX_FIELD_EQ(inName,"setImageTexture") ) { return hx::Val( setImageTexture_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloatPrivate") ) { return hx::Val( setFloatPrivate_dyn() ); }
		if (HX_FIELD_EQ(inName,"renderToTexture") ) { return hx::Val( renderToTexture_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"setVertexBuffers") ) { return hx::Val( setVertexBuffers_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTextureFilter") ) { return hx::Val( getTextureFilter_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloat2Private") ) { return hx::Val( setFloat2Private_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloat3Private") ) { return hx::Val( setFloat3Private_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloat4Private") ) { return hx::Val( setFloat4Private_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloatsPrivate") ) { return hx::Val( setFloatsPrivate_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMatrixPrivate") ) { return hx::Val( setMatrixPrivate_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"setVector2Private") ) { return hx::Val( setVector2Private_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVector3Private") ) { return hx::Val( setVector3Private_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVector4Private") ) { return hx::Val( setVector4Private_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMatrix3Private") ) { return hx::Val( setMatrix3Private_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"setTextureInternal") ) { return hx::Val( setTextureInternal_dyn() ); }
		if (HX_FIELD_EQ(inName,"renderToBackbuffer") ) { return hx::Val( renderToBackbuffer_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"drawIndexedVertices") ) { return hx::Val( drawIndexedVertices_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"setTextureWrapNative") ) { return hx::Val( setTextureWrapNative_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTextureAddressing") ) { return hx::Val( getTextureAddressing_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTextureParameters") ) { return hx::Val( setTextureParameters_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"renderTargetsInvertedY") ) { return hx::Val( renderTargetsInvertedY_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTexture3DWrapNative") ) { return hx::Val( setTexture3DWrapNative_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTextureMipMapFilter") ) { return hx::Val( getTextureMipMapFilter_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTexture3DParameters") ) { return hx::Val( setTexture3DParameters_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawAllIndexedVertices") ) { return hx::Val( drawAllIndexedVertices_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"supportsNonPow2Textures") ) { return hx::Val( supportsNonPow2Textures_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTextureFiltersNative") ) { return hx::Val( setTextureFiltersNative_dyn() ); }
		if (HX_FIELD_EQ(inName,"setImageTextureInternal") ) { return hx::Val( setImageTextureInternal_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawSomeIndexedVertices") ) { return hx::Val( drawSomeIndexedVertices_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"setVertexBuffersInternal") ) { return hx::Val( setVertexBuffersInternal_dyn() ); }
		if (HX_FIELD_EQ(inName,"setStencilReferenceValue") ) { return hx::Val( setStencilReferenceValue_dyn() ); }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"setTexture3DFiltersNative") ) { return hx::Val( setTexture3DFiltersNative_dyn() ); }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"instancedRenderingAvailable") ) { return hx::Val( instancedRenderingAvailable_dyn() ); }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"drawIndexedVerticesInstanced") ) { return hx::Val( drawIndexedVerticesInstanced_dyn() ); }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"drawAllIndexedVerticesInstanced") ) { return hx::Val( drawAllIndexedVerticesInstanced_dyn() ); }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"drawSomeIndexedVerticesInstanced") ) { return hx::Val( drawSomeIndexedVerticesInstanced_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Graphics_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"lastWindow") ) { outValue = ( lastWindow ); return true; }
	}
	return false;
}

hx::Val Graphics_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"target") ) { target=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"window") ) { window=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Graphics_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"lastWindow") ) { lastWindow=ioValue.Cast< int >(); return true; }
	}
	return false;
}

void Graphics_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("target",51,f3,ec,86));
	outFields->push(HX_("window",f0,93,8c,52));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Graphics_obj_sMemberStorageInfo[] = {
	{hx::fsObject /* ::Dynamic */ ,(int)offsetof(Graphics_obj,target),HX_("target",51,f3,ec,86)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Graphics_obj,window),HX_("window",f0,93,8c,52)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Graphics_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Graphics_obj::lastWindow,HX_("lastWindow",e6,76,67,1d)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Graphics_obj_sMemberFields[] = {
	HX_("target",51,f3,ec,86),
	HX_("window",f0,93,8c,52),
	HX_("init",10,3b,bb,45),
	HX_("vsynced",70,5c,6c,1a),
	HX_("refreshRate",5b,e2,3f,40),
	HX_("clear",8d,71,5b,48),
	HX_("viewport",66,4c,a5,9c),
	HX_("clear2",05,ea,a7,07),
	HX_("setVertexBuffer",46,82,5f,8f),
	HX_("setVertexBuffersInternal",ca,53,97,36),
	HX_("setVertexBuffers",6d,7b,32,e4),
	HX_("setIndexBuffer",30,a1,64,9d),
	HX_("maxTextureSize",f8,a6,7c,0a),
	HX_("supportsNonPow2Textures",7b,44,f6,8f),
	HX_("setCubeMap",25,71,af,df),
	HX_("setCubeMapDepth",9e,a9,42,6f),
	HX_("scissor",1c,28,e7,04),
	HX_("disableScissor",14,73,66,02),
	HX_("renderTargetsInvertedY",d8,54,7d,0d),
	HX_("instancedRenderingAvailable",ec,b3,0a,bc),
	HX_("setTextureWrapNative",ba,65,1f,6a),
	HX_("setTexture3DWrapNative",eb,51,94,59),
	HX_("setTextureFiltersNative",99,9c,96,07),
	HX_("setTexture3DFiltersNative",08,a5,60,57),
	HX_("getTextureAddressing",f3,66,52,1b),
	HX_("getTextureFilter",7d,9c,6d,82),
	HX_("getTextureMipMapFilter",c5,55,f9,20),
	HX_("setTextureParameters",63,39,4d,35),
	HX_("setTexture3DParameters",94,25,c2,24),
	HX_("setTextureInternal",b6,91,0a,1f),
	HX_("setTexture",59,ed,bf,f1),
	HX_("setTextureDepth",ea,70,7f,ee),
	HX_("setTextureArray",80,ed,e4,3c),
	HX_("setVideoTexture",62,04,93,d7),
	HX_("setImageTextureInternal",df,8a,bb,92),
	HX_("setImageTexture",82,15,5f,ad),
	HX_("setPipeline",e4,84,e4,7b),
	HX_("setStencilReferenceValue",c0,df,a3,11),
	HX_("setBool",ec,c4,9f,06),
	HX_("setBoolPrivate",77,45,e2,4b),
	HX_("setInt",6d,9a,67,6f),
	HX_("setIntPrivate",16,92,5a,65),
	HX_("setFloat",9a,2e,cb,10),
	HX_("setFloatPrivate",89,8d,2f,3e),
	HX_("setFloat2",58,98,fd,a0),
	HX_("setFloat2Private",8b,f7,7c,1c),
	HX_("setFloat3",59,98,fd,a0),
	HX_("setFloat3Private",aa,69,af,55),
	HX_("setFloat4",5a,98,fd,a0),
	HX_("setFloat4Private",c9,db,e1,8e),
	HX_("setVector2",8d,1e,7c,2d),
	HX_("setVector2Private",f6,d1,ec,7a),
	HX_("setVector3",8e,1e,7c,2d),
	HX_("setVector3Private",15,44,1f,b4),
	HX_("setVector4",8f,1e,7c,2d),
	HX_("setVector4Private",34,b6,51,ed),
	HX_("setFloats",99,98,fd,a0),
	HX_("setFloatsPrivate",6a,f1,4b,a2),
	HX_("setMatrix",83,ab,6f,1b),
	HX_("setMatrixPrivate",c0,6f,3c,0e),
	HX_("setMatrix3",50,67,46,e6),
	HX_("setMatrix3Private",93,77,e8,90),
	HX_("drawIndexedVertices",66,b1,0b,a1),
	HX_("drawAllIndexedVertices",0d,ce,56,26),
	HX_("drawSomeIndexedVertices",d2,66,7a,1f),
	HX_("drawIndexedVerticesInstanced",e9,54,0f,6d),
	HX_("drawAllIndexedVerticesInstanced",62,eb,14,fc),
	HX_("drawSomeIndexedVerticesInstanced",fd,91,0c,77),
	HX_("renderToTexture",6a,5a,1d,b7),
	HX_("renderToBackbuffer",38,c0,43,c6),
	HX_("begin",29,ea,55,b0),
	HX_("beginFace",66,93,8f,8c),
	HX_("beginEye",c8,da,06,3a),
	HX_("end",db,03,4d,00),
	HX_("flush",c4,62,9b,02),
	::String(null()) };

static void Graphics_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Graphics_obj::lastWindow,"lastWindow");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Graphics_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Graphics_obj::lastWindow,"lastWindow");
};

#endif

hx::Class Graphics_obj::__mClass;

static ::String Graphics_obj_sStaticFields[] = {
	HX_("lastWindow",e6,76,67,1d),
	::String(null())
};

void Graphics_obj::__register()
{
	Graphics_obj _hx_dummy;
	Graphics_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("kha.kore.graphics4.Graphics",5d,72,20,bb);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Graphics_obj::__GetStatic;
	__mClass->mSetStaticField = &Graphics_obj::__SetStatic;
	__mClass->mMarkFunc = Graphics_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Graphics_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Graphics_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Graphics_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Graphics_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Graphics_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Graphics_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Graphics_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_cfbfed328d063821_47_boot)
HXDLIN(  47)		lastWindow = -1;
            	}
}

} // end namespace kha
} // end namespace kore
} // end namespace graphics4
