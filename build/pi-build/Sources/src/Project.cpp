// Generated by Haxe 4.0.0-preview.5+1aaf080
#include <hxcpp.h>

#ifndef INCLUDED_Project
#include <hxinc/Project.h>
#endif
#ifndef INCLUDED_components_Component
#include <hxinc/components/Component.h>
#endif
#ifndef INCLUDED_components_DivisionRect
#include <hxinc/components/DivisionRect.h>
#endif
#ifndef INCLUDED_components_Textbox
#include <hxinc/components/Textbox.h>
#endif
#ifndef INCLUDED_kha_Assets
#include <hxinc/kha/Assets.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <hxinc/kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Framebuffer
#include <hxinc/kha/Framebuffer.h>
#endif
#ifndef INCLUDED_kha_Kravur
#include <hxinc/kha/Kravur.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha__Assets_FontList
#include <hxinc/kha/_Assets/FontList.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics
#include <hxinc/kha/graphics2/Graphics.h>
#endif
#ifndef INCLUDED_kha_math_Vector2
#include <hxinc/kha/math/Vector2.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d85277f79961908f_15_new,"Project","new",0xf2be2c2b,"Project.new","Project.hx",15,0xbb0fc1a5)
HX_LOCAL_STACK_FRAME(_hx_pos_d85277f79961908f_20_init,"Project","init",0x706130e5,"Project.init","Project.hx",20,0xbb0fc1a5)
HX_LOCAL_STACK_FRAME(_hx_pos_d85277f79961908f_30_update,"Project","update",0x1f745b1e,"Project.update","Project.hx",30,0xbb0fc1a5)
HX_LOCAL_STACK_FRAME(_hx_pos_d85277f79961908f_35_render,"Project","render",0x9d98406b,"Project.render","Project.hx",35,0xbb0fc1a5)

void Project_obj::__construct(Float windowWidth,Float windowHeight){
            	HX_STACKFRAME(&_hx_pos_d85277f79961908f_15_new)
HXLINE(  16)		this->windowWidth = windowWidth;
HXLINE(  17)		this->windowHeight = windowHeight;
            	}

Dynamic Project_obj::__CreateEmpty() { return new Project_obj; }

void *Project_obj::_hx_vtable = 0;

Dynamic Project_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Project_obj > _hx_result = new Project_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Project_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1af0ced5;
}

void Project_obj::init(){
            	HX_GC_STACKFRAME(&_hx_pos_d85277f79961908f_20_init)
HXLINE(  21)		this->masterDivision =  ::components::DivisionRect_obj::__alloc( HX_CTX , ::kha::math::Vector2_obj::__alloc( HX_CTX ,0,0),this->windowWidth,this->windowHeight);
HXLINE(  22)		this->masterDivision->origin =  ::kha::math::Vector2_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  24)		 ::components::Textbox tb =  ::components::Textbox_obj::__alloc( HX_CTX , ::kha::math::Vector2_obj::__alloc( HX_CTX ,0,0),HX_("This is a text string<nl>with a new line",f8,5f,d0,76));
HXLINE(  25)		this->masterDivision->addChild(tb);
HXLINE(  27)		this->font = ::kha::Assets_obj::fonts->get(HX_("RobotoMono",a8,61,bf,79));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Project_obj,init,(void))

void Project_obj::update(){
            	HX_STACKFRAME(&_hx_pos_d85277f79961908f_30_update)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Project_obj,update,(void))

void Project_obj::render(::Array< ::Dynamic> frames){
            	HX_STACKFRAME(&_hx_pos_d85277f79961908f_35_render)
HXDLIN(  35)		if ((frames->length > 0)) {
HXLINE(  36)			 ::kha::graphics2::Graphics graphics = frames->__get(0).StaticCast<  ::kha::Framebuffer >()->get_g2();
HXLINE(  37)			graphics->begin(null(),null());
HXLINE(  38)			graphics->set_font(this->font);
HXLINE(  39)			this->masterDivision->draw(graphics);
HXLINE(  40)			graphics->end();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Project_obj,render,(void))


hx::ObjectPtr< Project_obj > Project_obj::__new(Float windowWidth,Float windowHeight) {
	hx::ObjectPtr< Project_obj > __this = new Project_obj();
	__this->__construct(windowWidth,windowHeight);
	return __this;
}

hx::ObjectPtr< Project_obj > Project_obj::__alloc(hx::Ctx *_hx_ctx,Float windowWidth,Float windowHeight) {
	Project_obj *__this = (Project_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Project_obj), true, "Project"));
	*(void **)__this = Project_obj::_hx_vtable;
	__this->__construct(windowWidth,windowHeight);
	return __this;
}

Project_obj::Project_obj()
{
}

void Project_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Project);
	HX_MARK_MEMBER_NAME(windowWidth,"windowWidth");
	HX_MARK_MEMBER_NAME(windowHeight,"windowHeight");
	HX_MARK_MEMBER_NAME(masterDivision,"masterDivision");
	HX_MARK_MEMBER_NAME(font,"font");
	HX_MARK_END_CLASS();
}

void Project_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(windowWidth,"windowWidth");
	HX_VISIT_MEMBER_NAME(windowHeight,"windowHeight");
	HX_VISIT_MEMBER_NAME(masterDivision,"masterDivision");
	HX_VISIT_MEMBER_NAME(font,"font");
}

hx::Val Project_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"font") ) { return hx::Val( font ); }
		if (HX_FIELD_EQ(inName,"init") ) { return hx::Val( init_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		if (HX_FIELD_EQ(inName,"render") ) { return hx::Val( render_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"windowWidth") ) { return hx::Val( windowWidth ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"windowHeight") ) { return hx::Val( windowHeight ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"masterDivision") ) { return hx::Val( masterDivision ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Project_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"font") ) { font=inValue.Cast<  ::kha::Kravur >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"windowWidth") ) { windowWidth=inValue.Cast< Float >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"windowHeight") ) { windowHeight=inValue.Cast< Float >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"masterDivision") ) { masterDivision=inValue.Cast<  ::components::DivisionRect >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Project_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("windowWidth",f6,4b,35,bb));
	outFields->push(HX_("windowHeight",f7,a3,bc,c9));
	outFields->push(HX_("masterDivision",ef,0b,9c,3b));
	outFields->push(HX_("font",cf,5d,c0,43));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Project_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(Project_obj,windowWidth),HX_("windowWidth",f6,4b,35,bb)},
	{hx::fsFloat,(int)offsetof(Project_obj,windowHeight),HX_("windowHeight",f7,a3,bc,c9)},
	{hx::fsObject /*  ::components::DivisionRect */ ,(int)offsetof(Project_obj,masterDivision),HX_("masterDivision",ef,0b,9c,3b)},
	{hx::fsObject /*  ::kha::Kravur */ ,(int)offsetof(Project_obj,font),HX_("font",cf,5d,c0,43)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Project_obj_sStaticStorageInfo = 0;
#endif

static ::String Project_obj_sMemberFields[] = {
	HX_("windowWidth",f6,4b,35,bb),
	HX_("windowHeight",f7,a3,bc,c9),
	HX_("masterDivision",ef,0b,9c,3b),
	HX_("font",cf,5d,c0,43),
	HX_("init",10,3b,bb,45),
	HX_("update",09,86,05,87),
	HX_("render",56,6b,29,05),
	::String(null()) };

hx::Class Project_obj::__mClass;

void Project_obj::__register()
{
	Project_obj _hx_dummy;
	Project_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("Project",b9,3a,3c,c3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Project_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Project_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Project_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Project_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

