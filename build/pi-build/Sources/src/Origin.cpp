// Generated by Haxe 4.0.0-preview.5+1aaf080
#include <hxcpp.h>

#ifndef INCLUDED_Origin
#include <hxinc/Origin.h>
#endif
#ifndef INCLUDED_OriginPoint
#include <hxinc/OriginPoint.h>
#endif
#ifndef INCLUDED_kha_math_Vector2
#include <hxinc/kha/math/Vector2.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_3310ccaea7d3e5bc_14_getOriginOffset,"Origin","getOriginOffset",0x82d0c967,"Origin.getOriginOffset","Origin.hx",14,0x8bf1bc78)

void Origin_obj::__construct() { }

Dynamic Origin_obj::__CreateEmpty() { return new Origin_obj; }

void *Origin_obj::_hx_vtable = 0;

Dynamic Origin_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Origin_obj > _hx_result = new Origin_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Origin_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7f958e06;
}

 ::kha::math::Vector2 Origin_obj::getOriginOffset( ::OriginPoint origin, ::kha::math::Vector2 size){
            	HX_GC_STACKFRAME(&_hx_pos_3310ccaea7d3e5bc_14_getOriginOffset)
HXLINE(  15)		 ::kha::math::Vector2 offset =  ::kha::math::Vector2_obj::__alloc( HX_CTX ,0,0);
HXLINE(  17)		switch((int)(origin->_hx_getIndex())){
            			case (int)0: {
            			}
            			break;
            			case (int)1: {
HXLINE(  20)				offset->x = (-(size->x) / ( (Float)(2) ));
            			}
            			break;
            			case (int)2: {
HXLINE(  22)				offset->x = -(size->x);
            			}
            			break;
            			case (int)3: {
HXLINE(  24)				offset->y = (-(size->y) / ( (Float)(2) ));
            			}
            			break;
            			case (int)4: {
HXLINE(  26)				offset->x = (-(size->x) / ( (Float)(2) ));
HXLINE(  27)				offset->y = (-(size->y) / ( (Float)(2) ));
            			}
            			break;
            			case (int)5: {
HXLINE(  29)				offset->x = -(size->x);
HXLINE(  30)				offset->y = (-(size->y) / ( (Float)(2) ));
            			}
            			break;
            			case (int)6: {
HXLINE(  32)				offset->y = -(size->y);
            			}
            			break;
            			case (int)7: {
HXLINE(  34)				offset->x = (-(size->x) / ( (Float)(2) ));
HXLINE(  35)				offset->y = -(size->y);
            			}
            			break;
            			case (int)8: {
HXLINE(  37)				offset->x = -(size->x);
HXLINE(  38)				offset->y = -(size->y);
            			}
            			break;
            		}
HXLINE(  41)		return offset;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Origin_obj,getOriginOffset,return )


Origin_obj::Origin_obj()
{
}

bool Origin_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"getOriginOffset") ) { outValue = getOriginOffset_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Origin_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Origin_obj_sStaticStorageInfo = 0;
#endif

hx::Class Origin_obj::__mClass;

static ::String Origin_obj_sStaticFields[] = {
	HX_("getOriginOffset",cf,eb,60,ae),
	::String(null())
};

void Origin_obj::__register()
{
	Origin_obj _hx_dummy;
	Origin_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("Origin",06,8e,95,7f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Origin_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Origin_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Origin_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Origin_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Origin_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

